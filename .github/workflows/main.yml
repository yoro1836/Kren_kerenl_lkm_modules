name: Build LKM Module

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set up swap
        shell: bash
        run: |
          sudo swapoff -a
          sudo fallocate -l 10G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          sudo swapon -s
          free -h

      - name: Set up ccache (disabled temporarily)
        # uses: actions/cache@v4 ... (ccache config commented out)

      - name: Checkout kernel source code
        uses: actions/checkout@v4
        with:
          repository: yoro1836/Kren_kernel
          ref: S908EXXUBEXK5
          path: kernel_source

      - name: Checkout module source code
        uses: actions/checkout@v4
        with:
          repository: lwfinger/rtw88
          path: module_source

      - name: Set up build environment
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libncurses-dev bison flex openssl libssl-dev dkms libelf-dev libudev-dev libpci-dev llvm lld
          sudo apt-get install -y ccache
          echo " " >> ~/.bashrc
          echo "export USE_CCACHE=0" >> ~/.bashrc
          echo "export PATH=$PATH:$(pwd)/toolchain/bin" >> ~/.bashrc
          echo "export ARCH=arm64" >> ~/.bashrc
          echo "export CROSS_COMPILE=aarch64-linux-gnu-" >> ~/.bashrc
          source ~/.bashrc
          wget https://github.com/ZyCromerZ/Clang/releases/download/12.0.1-20230207-release/Clang-12.0.1-20230207.tar.gz -O toolchain.tar.gz
          mkdir toolchain
          tar -xzf toolchain.tar.gz -C toolchain
          export PATH=$PATH:$(pwd)/toolchain/bin
          export ARCH=arm64
          export CROSS_COMPILE=aarch64-linux-gnu-

      - name: Prepare kernel headers and build directory
        shell: bash
        working-directory: kernel_source
        run: |
          export KBUILD_OUTPUT=build_output
          export INSTALL_HDR_PATH=header_install
          export KCONFIG_CONFIG=.config

          mkdir -p $KBUILD_OUTPUT
          mkdir -p $INSTALL_HDR_PATH

          source ~/.bashrc

          rm -rf $KBUILD_OUTPUT
          rm -f .config

          make ARCH=arm64 distclean

          ls -al
          
          run: |
            make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- LLVM=1 LLVM_IAS=1 DEPMOD=depmod DTC=dtc HOSTCC=clang HOSTCXX=clang++ CC=clang \
            kren_defconfig

          ls -al

          ./scripts/config --set-val CONFIG_KBUILD_INTERACTIVE n

          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- LLVM=1 LLVM_IAS=1 DEPMOD=depmod DTC=dtc HOSTCC=clang HOSTCXX=clang++ CC=clang \
          headers_install INSTALL_HDR_PATH=./$INSTALL_HDR_PATH

          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- LLVM=1 LLVM_IAS=1 DEPMOD=depmod DTC=dtc HOSTCC=clang HOSTCXX=clang++ CC=clang \
          prepare O=./$KBUILD_OUTPUT


      - name: Compile LKM module
        shell: bash
        working-directory: module_source
        run: |
          source ~/.bashrc
          export KBUILD_OUTPUT=../kernel_source/build_output
          sudo make -j$(nproc) -C ../kernel_source/$KBUILD_OUTPUT M=$(pwd) modules ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- LLVM=1 LLVM_IAS=1 DEPMOD=depmod DTC=dtc HOSTCC=clang HOSTCXX=clang++ CC=clang


      - name: Upload LKM module artifact
        uses: actions/upload-artifact@v4
        with:
          name: rtw88.ko
          path: module_source/rtw88.ko
